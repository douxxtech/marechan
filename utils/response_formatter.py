#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os

class ResponseFormatter:
    def __init__(self, config, logger):
        """
        Initialise le formateur de réponses

        Args:
            config: Configuration contenant les paramètres du template
            logger: Instance du logger pour enregistrer les événements
        """
        self.html_template_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', config.get('Templates', 'html_template_path'))
        self.logger = logger

    def read_html_template(self):
        """
        Lit le template HTML depuis le fichier

        Returns:
            str: Contenu du template HTML ou template par défaut si le fichier est introuvable
        """
        try:
            with open(self.html_template_path, 'r', encoding='utf-8') as file:
                return file.read()
        except Exception as e:
            self.logger.log_message(f"Error reading HTML template: {str(e)}")
            return """<!DOCTYPE html>
<html>
<head><title>MareChan Response</title></head>
<body>
<div>{{MESSAGE_CONTENT}}</div>
</body>
</html>"""

    def create_html_response(self, response_data, assistant_config):
        """
        Crée une réponse HTML formatée

        Args:
            response_data: Données de la réponse
            assistant_config: Configuration de l'assistant

        Returns:
            str: Réponse HTML formatée
        """
        try:
            html_template = self.read_html_template()

            message = response_data.get('message', '')

            # Ajouter un disclaimer
            disclaimer = """
            <tr>
                <td style="padding: 15px 20px; font-size: 12px; color: #777777; text-align: center;">
                    <p>This is an automated response generated by AI, and the responses may be incorrect.</p>
                </td>
            </tr>
            """

            # Remplacer les variables dans le template
            html_response = html_template.replace("{{MESSAGE_CONTENT}}", message)
            html_response = html_response.replace("{{DISCLAIMER}}", disclaimer)

            return html_response

        except Exception as e:
            self.logger.log_message(f"Error creating HTML response: {str(e)}")
            return f"<html><body><p>{response_data.get('message', '')}</p><p><small>This is an automated response generated by AI, and the responses may be incorrect.</small></p></body></html>"